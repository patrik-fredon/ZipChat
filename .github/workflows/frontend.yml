name: Frontend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'frontend/Dockerfile'
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'frontend/Dockerfile'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run npm audit
        working-directory: ./frontend
        run: npm audit

      - name: Run dependency vulnerability scan
        uses: snyk/actions/node@master
        with:
          args: --file=frontend/package.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run tests
        working-directory: ./frontend
        run: |
          npm run test
          npm run test:coverage
          npm run lint

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          fail_ci_if_error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/zipchat-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/zipchat-frontend:${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zipchat-frontend:buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zipchat-frontend:buildcache,mode=max
            type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/hpa.yaml
          kubectl apply -f k8s/network-policies.yaml
          kubectl apply -f k8s/resource-quotas.yaml
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/zipchat-frontend
          kubectl get pods -l app=zipchat-frontend
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
