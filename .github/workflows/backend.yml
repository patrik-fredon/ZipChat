name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'Dockerfile'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'Dockerfile'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Bandit security checks
        uses: PyCQA/bandit@main
        with:
          args: -r backend/ -x tests/

      - name: Run dependency vulnerability scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov bandit

      - name: Run tests
        run: |
          pytest --cov=backend tests/
          bandit -r backend/ -x tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/zipchat-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/zipchat-backend:${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zipchat-backend:buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zipchat-backend:buildcache,mode=max
            type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/hpa.yaml
          kubectl apply -f k8s/network-policies.yaml
          kubectl apply -f k8s/resource-quotas.yaml
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/zipchat-backend
          kubectl get pods -l app=zipchat-backend
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
