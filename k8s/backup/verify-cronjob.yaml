apiVersion: batch/v1
kind: CronJob
metadata:
  name: database-backup-verify
  labels:
    app: backup-verify
spec:
  schedule: '0 1 * * *' # Každý den v 1:00
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: verify
              image: postgres:14-alpine
              command:
                - /bin/sh
                - -c
                - |
                  # Instalace potřebných nástrojů
                  apk add --no-cache aws-cli curl jq

                  # Vytvoření logovacího adresáře
                  mkdir -p /var/log

                  # Spuštění verifikačního skriptu
                  chmod +x /scripts/verify-backup.sh
                  /scripts/verify-backup.sh

                  # Odeslání metrik do Prometheus
                  if [ -f /var/log/backup-verify.log ]; then
                    VERIFICATION_STATUS=$(tail -n 1 /var/log/backup-verify.log | grep -o "Backup verification .*")
                    if [[ $VERIFICATION_STATUS == *"successful"* ]]; then
                      curl -X POST -H "Content-Type: application/json" \
                        -d '{"status": "success", "timestamp": "'$(date +%s)'"}' \
                        http://prometheus-pushgateway:9091/metrics/job/backup_verify
                    else
                      curl -X POST -H "Content-Type: application/json" \
                        -d '{"status": "failure", "timestamp": "'$(date +%s)'"}' \
                        http://prometheus-pushgateway:9091/metrics/job/backup_verify
                    fi
                  fi
              env:
                - name: POSTGRES_HOST
                  valueFrom:
                    secretKeyRef:
                      name: database-credentials
                      key: host
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: database-credentials
                      key: user
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: database-credentials
                      key: password
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: database-credentials
                      key: database
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: aws-credentials
                      key: access-key
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: aws-credentials
                      key: secret-key
                - name: AWS_DEFAULT_REGION
                  value: eu-central-1
                - name: S3_BUCKET
                  value: zipchat-backups
                - name: SNS_TOPIC_ARN
                  valueFrom:
                    secretKeyRef:
                      name: aws-credentials
                      key: sns-topic-arn
              volumeMounts:
                - name: backup-volume
                  mountPath: /backup
                - name: verify-volume
                  mountPath: /verify
                - name: scripts-volume
                  mountPath: /scripts
                - name: log-volume
                  mountPath: /var/log
          volumes:
            - name: backup-volume
              emptyDir: {}
            - name: verify-volume
              emptyDir: {}
            - name: scripts-volume
              configMap:
                name: backup-scripts
            - name: log-volume
              emptyDir: {}
          restartPolicy: OnFailure
          backoffLimit: 3
